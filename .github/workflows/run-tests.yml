name: Run tests on all platforms
on:
  workflow_call:
    inputs:
      kotlin-version:
        description: Override Kotlin version
        type: string
      kotlin-use-k2:
        description: Use or not K2
        type: string
        default: 'false'
      cache-disabled:
        description: When 'true', all caching is disabled. No entries will be written to or read from the cache.
        type: boolean
        default: false
      configuration-cache-enabled:
        description: When `true`, will use configuration cache
        type: boolean
        default: false
      patch-file:
        description: Path to git patch to apply
        type: string

  workflow_dispatch:
    inputs:
      kotlin-version:
        description: Override Kotlin version
        type: string
      kotlin-use-k2:
        description: Use or not K2
        type: string
        default: 'false'
      cache-disabled:
        description: When 'true', all caching is disabled. No entries will be written to or read from the cache.
        type: boolean
        default: false
      configuration-cache-enabled:
        description: When `true`, will use configuration cache
        type: boolean
        default: false
      patch-file:
        description: Path to git patch to apply
        type: string

jobs:
  jvm-test:
    name: Run JVM tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git apply ${{ inputs.patch-file }}
        if: inputs.patch-file != ''
      - uses: ./.github/actions/setup-gradle
        with:
          cache-disabled: ${{ inputs.cache-disabled }}

      - id: configuration-cache
        if: ${{ inputs.configuration-cache-enabled }}
        run: echo "ARGS=--configuration-cache" >> $GITHUB_OUTPUT

      - name: Run tests
        timeout-minutes: 15
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jvmTest
            jvm11Test
            jvm17Test
            jvm20Test
            --scan
            --info
            --continue
            -Pkotlin.experimental.tryK2=${{ inputs.kotlin-use-k2 }}
            -PuseKotlin=${{ inputs.kotlin-version }}
            ${{ steps.configuration-cache.outputs.ARGS }}"
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  js-test:
    name: Run JS tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: git apply ${{ inputs.patch-file }}
        if: inputs.patch-file != ''
      - uses: ./.github/actions/setup-gradle
        with:
          cache-disabled: ${{ inputs.cache-disabled }}

      - id: configuration-cache
        if: ${{ inputs.configuration-cache-enabled }}
        run: echo "ARGS=--configuration-cache" >> $GITHUB_OUTPUT

      - name: Run tests
        timeout-minutes: 15
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jsNodeTest
            jsBrowserTest
            --scan
            --info
            --continue
            -Pkotlin.experimental.tryK2=${{ inputs.kotlin-use-k2 }}
            -PuseKotlin=${{ inputs.kotlin-version }}
            ${{ steps.configuration-cache.outputs.ARGS }}"
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  native-test:
    name: Run Native(${{ matrix.target }}) tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        target: [ macosX64, iosX64, tvosX64, watchosX64 ]
        include:
          - os: ubuntu-latest
            target: linuxX64
          - os: windows-latest
            target: mingwX64
    steps:
      - uses: actions/checkout@v3
      - run: git apply ${{ inputs.patch-file }}
        if: inputs.patch-file != ''
      - uses: ./.github/actions/setup-gradle
        with:
          cache-disabled: ${{ inputs.cache-disabled }}

      - id: configuration-cache
        if: ${{ inputs.configuration-cache-enabled }}
        run: echo "ARGS=--configuration-cache" >> $GITHUB_OUTPUT

      - name: Run tests
        timeout-minutes: 30
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            ${{ matrix.target }}Test
            ${{ matrix.target }}ReleaseTest
            --scan
            --info
            --continue
            -Pkotlin.experimental.tryK2=${{ inputs.kotlin-use-k2 }}
            -PuseKotlin=${{ inputs.kotlin-version }}
            ${{ steps.configuration-cache.outputs.ARGS }}"
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  publish-test-results:
    needs: [ jvm-test, js-test, native-test ]
    if: always()
    name: Publish test report
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-reports
          path: test-reports
      - name: Publish Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-reports/**/TEST-*.xml

  build-project:
    name: Build project on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
    steps:
      - uses: actions/checkout@v3
      - run: git apply ${{ inputs.patch-file }}
        if: inputs.patch-file != ''
      - uses: ./.github/actions/setup-gradle
        with:
          cache-disabled: ${{ inputs.cache-disabled }}

      - id: configuration-cache
        if: ${{ inputs.configuration-cache-enabled }}
        run: echo "ARGS=--configuration-cache" >> $GITHUB_OUTPUT

      - name: Build project without running tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            build
            publishToMavenLocal
            --scan
            --info
            --continue
            -Pskip.test
            -Pkotlin.experimental.tryK2=${{ inputs.kotlin-use-k2 }}
            -PuseKotlin=${{ inputs.kotlin-version }}
            ${{ steps.configuration-cache.outputs.ARGS }}"
