name: Run tests on all platforms
on: [ workflow_call, workflow_dispatch ]

jobs:
  jvm-test:
    name: Run JVM tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-gradle
      - name: Run tests
        timeout-minutes: 30
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jvmTest
            jvm11Test
            jvm17Test
            --scan
            --info
            --continue
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  js-test:
    name: Run JS tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-gradle
      - name: Run tests
        timeout-minutes: 30
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jsIrTest
            jsLegacyTest
            --scan
            --info
            --continue
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  native-test:
    name: Run Native(${{ matrix.target }}) tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        target: [ macosX64, iosX64, tvosX64, watchosX64 ]
        include:
          - os: ubuntu-latest
            target: linuxX64
          - os: windows-latest
            target: mingwX64
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup-gradle
      - name: Run tests
        timeout-minutes: 30
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            ${{ matrix.target }}Test
            ${{ matrix.target }}ReleaseTest
            --scan
            --info
            --continue
      - if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: "**/build/test-results/*Test/TEST-*.xml"
          retention-days: 1

  publish-test-results:
    needs: [ jvm-test, js-test, native-test ]
    if: always()
    name: Publish test report
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: test-reports
          path: test-reports
      - name: Publish Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-reports/**/TEST-*.xml
