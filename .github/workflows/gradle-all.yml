name: Branches CI

on:
  # Trigger the workflow on push
  # but only for the non master branches
  push:
    branches-ignore:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest ]
        macTargetsCompilation: [ macos, ios, watchos, tvos ]
        include:
          - os: ubuntu-20.04
          - os: windows-latest
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.*') }} #hash based on *.gradle.kts and *.gradle.properties
          restore-keys: ${{ runner.os }}-gradle
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: build -PmacTargetsCompilation=${{ matrix.macTargetsCompilation }} --scan --no-daemon

  publish:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-latest, windows-latest ]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.*') }} #hash based on *.gradle.kts and *.gradle.properties
          restore-keys: ${{ runner.os }}-gradle
      - if: ${{ matrix.os == 'windows-latest' }}
        run: echo ("::set-env name=BRANCH_NAME::" + $env:GITHUB_REF.replace('refs/heads/', ''))
      - if: ${{ matrix.os != 'windows-latest' }}
        run: echo "##[set-env name=BRANCH_NAME;]$(echo ${GITHUB_REF#refs/heads/})"
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: artifactoryPublish -PbintrayUser=${{ secrets.bintrayUser }} -PbintrayKey=${{ secrets.bintrayKey }} -PversionSuffix=-${{ env.BRANCH_NAME }}-SNAPSHOT -PbuildNumber=${{ github.run_number }} --stacktrace --no-daemon
