public final class io/rsocket/kotlin/transport/ktor/websocket/internal/KtorWebSocketConnection : io/rsocket/kotlin/transport/RSocketSequentialConnection {
	public fun <init> (Lio/ktor/websocket/WebSocketSession;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun receiveFrame (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun sendFrame (ILkotlinx/io/Buffer;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class io/rsocket/kotlin/transport/ktor/websocket/internal/WebSocketConnection : io/rsocket/kotlin/Connection, kotlinx/coroutines/CoroutineScope {
	public fun <init> (Lio/ktor/websocket/WebSocketSession;)V
	public fun getCoroutineContext ()Lkotlin/coroutines/CoroutineContext;
	public fun receive (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun send (Lkotlinx/io/Buffer;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

