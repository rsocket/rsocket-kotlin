// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, wasmWasi, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.rsocket.kotlin:rsocket-transport-local>
sealed interface io.rsocket.kotlin.transport.local/LocalClientTransport : io.rsocket.kotlin.transport/RSocketTransport { // io.rsocket.kotlin.transport.local/LocalClientTransport|null[0]
    abstract fun target(kotlin/String): io.rsocket.kotlin.transport/RSocketClientTarget // io.rsocket.kotlin.transport.local/LocalClientTransport.target|target(kotlin.String){}[0]

    final object Factory : io.rsocket.kotlin.transport/RSocketTransportFactory<io.rsocket.kotlin.transport.local/LocalClientTransport, io.rsocket.kotlin.transport.local/LocalClientTransportBuilder> // io.rsocket.kotlin.transport.local/LocalClientTransport.Factory|null[0]
}

sealed interface io.rsocket.kotlin.transport.local/LocalClientTransportBuilder : io.rsocket.kotlin.transport/RSocketTransportBuilder<io.rsocket.kotlin.transport.local/LocalClientTransport> { // io.rsocket.kotlin.transport.local/LocalClientTransportBuilder|null[0]
    abstract fun dispatcher(kotlin.coroutines/CoroutineContext) // io.rsocket.kotlin.transport.local/LocalClientTransportBuilder.dispatcher|dispatcher(kotlin.coroutines.CoroutineContext){}[0]
}

sealed interface io.rsocket.kotlin.transport.local/LocalServerInstance : io.rsocket.kotlin.transport/RSocketServerInstance { // io.rsocket.kotlin.transport.local/LocalServerInstance|null[0]
    abstract val serverName // io.rsocket.kotlin.transport.local/LocalServerInstance.serverName|{}serverName[0]
        abstract fun <get-serverName>(): kotlin/String // io.rsocket.kotlin.transport.local/LocalServerInstance.serverName.<get-serverName>|<get-serverName>(){}[0]
}

sealed interface io.rsocket.kotlin.transport.local/LocalServerTransport : io.rsocket.kotlin.transport/RSocketTransport { // io.rsocket.kotlin.transport.local/LocalServerTransport|null[0]
    abstract fun target(): io.rsocket.kotlin.transport/RSocketServerTarget<io.rsocket.kotlin.transport.local/LocalServerInstance> // io.rsocket.kotlin.transport.local/LocalServerTransport.target|target(){}[0]
    abstract fun target(kotlin/String): io.rsocket.kotlin.transport/RSocketServerTarget<io.rsocket.kotlin.transport.local/LocalServerInstance> // io.rsocket.kotlin.transport.local/LocalServerTransport.target|target(kotlin.String){}[0]

    final object Factory : io.rsocket.kotlin.transport/RSocketTransportFactory<io.rsocket.kotlin.transport.local/LocalServerTransport, io.rsocket.kotlin.transport.local/LocalServerTransportBuilder> // io.rsocket.kotlin.transport.local/LocalServerTransport.Factory|null[0]
}

sealed interface io.rsocket.kotlin.transport.local/LocalServerTransportBuilder : io.rsocket.kotlin.transport/RSocketTransportBuilder<io.rsocket.kotlin.transport.local/LocalServerTransport> { // io.rsocket.kotlin.transport.local/LocalServerTransportBuilder|null[0]
    abstract fun dispatcher(kotlin.coroutines/CoroutineContext) // io.rsocket.kotlin.transport.local/LocalServerTransportBuilder.dispatcher|dispatcher(kotlin.coroutines.CoroutineContext){}[0]
    abstract fun multiplexed() // io.rsocket.kotlin.transport.local/LocalServerTransportBuilder.multiplexed|multiplexed(){}[0]
    abstract fun sequential() // io.rsocket.kotlin.transport.local/LocalServerTransportBuilder.sequential|sequential(){}[0]
}

final class io.rsocket.kotlin.transport.local/LocalServer : io.rsocket.kotlin.transport/ClientTransport { // io.rsocket.kotlin.transport.local/LocalServer|null[0]
    final val coroutineContext // io.rsocket.kotlin.transport.local/LocalServer.coroutineContext|{}coroutineContext[0]
        final fun <get-coroutineContext>(): kotlin.coroutines/CoroutineContext // io.rsocket.kotlin.transport.local/LocalServer.coroutineContext.<get-coroutineContext>|<get-coroutineContext>(){}[0]

    final suspend fun connect(): io.rsocket.kotlin/Connection // io.rsocket.kotlin.transport.local/LocalServer.connect|connect(){}[0]
}

final fun io.rsocket.kotlin.transport.local/LocalServerTransport(): io.rsocket.kotlin.transport/ServerTransport<io.rsocket.kotlin.transport.local/LocalServer> // io.rsocket.kotlin.transport.local/LocalServerTransport|LocalServerTransport(){}[0]
