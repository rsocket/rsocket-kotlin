// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.rsocket.kotlin:ktor-server-rsocket>
final class io.rsocket.kotlin.ktor.server/RSocketSupportConfig { // io.rsocket.kotlin.ktor.server/RSocketSupportConfig|null[0]
    final fun server(io.rsocket.kotlin.core/RSocketServer) // io.rsocket.kotlin.ktor.server/RSocketSupportConfig.server|server(io.rsocket.kotlin.core.RSocketServer){}[0]
    final fun server(kotlin/Function1<io.rsocket.kotlin.core/RSocketServerBuilder, kotlin/Unit>) // io.rsocket.kotlin.ktor.server/RSocketSupportConfig.server|server(kotlin.Function1<io.rsocket.kotlin.core.RSocketServerBuilder,kotlin.Unit>){}[0]
}

final val io.rsocket.kotlin.ktor.server/RSocketSupport // io.rsocket.kotlin.ktor.server/RSocketSupport|{}RSocketSupport[0]
    final fun <get-RSocketSupport>(): io.ktor.server.application/ApplicationPlugin<io.rsocket.kotlin.ktor.server/RSocketSupportConfig> // io.rsocket.kotlin.ktor.server/RSocketSupport.<get-RSocketSupport>|<get-RSocketSupport>(){}[0]

final fun (io.ktor.server.routing/Route).io.rsocket.kotlin.ktor.server/rSocket(kotlin/String, kotlin/String? = ..., io.rsocket.kotlin/ConnectionAcceptor) // io.rsocket.kotlin.ktor.server/rSocket|rSocket@io.ktor.server.routing.Route(kotlin.String;kotlin.String?;io.rsocket.kotlin.ConnectionAcceptor){}[0]
final fun (io.ktor.server.routing/Route).io.rsocket.kotlin.ktor.server/rSocket(kotlin/String? = ..., io.rsocket.kotlin/ConnectionAcceptor) // io.rsocket.kotlin.ktor.server/rSocket|rSocket@io.ktor.server.routing.Route(kotlin.String?;io.rsocket.kotlin.ConnectionAcceptor){}[0]
