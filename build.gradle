/*
 * Copyright 2016 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE' apply false
    id 'com.jfrog.bintray' version '1.8.4' apply false
    id 'com.jfrog.artifactory' version '4.7.3' apply false
    id 'org.jetbrains.kotlin.jvm' version '1.2.71' apply false
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'kotlin'
    apply plugin: 'io.spring.dependency-management'

    ext['netty-buffer.version'] = '4.1.30.Final'
    ext['jsr305.version'] = '3.0.2'
    ext['kotlin-stdlib-jdk7.version'] = '1.2.71'
    ext['rxjava.version'] = '2.2.2'
    ext['slf4j-api.version'] = '1.7.25'
    ext['junit.version'] = '4.12'
    ext['mockito.version'] = '2.23.0'
    ext['hamcrest-library.version'] = '1.3'
    ext['slf4j-log4j.version'] = '1.7.25'
    ext['reactor-netty.version'] = '0.7.10.RELEASE'
    ext['okhttp.version'] = '3.11.0'

    dependencyManagement {

        dependencies {
            /*common*/
            dependency "io.netty:netty-buffer:${ext['netty-buffer.version']}"
            dependency "com.google.code.findbugs:jsr305:${ext['jsr305.version']}"
            dependency "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${ext['kotlin-stdlib-jdk7.version']}"
            dependency "io.reactivex.rxjava2:rxjava:${ext['rxjava.version']}"
            dependency "org.slf4j:slf4j-api:${ext['slf4j-api.version']}"
            /*transports*/
            dependency "io.projectreactor.ipc:reactor-netty:${ext['reactor-netty.version']}"
            dependency "com.squareup.okhttp3:okhttp:${ext['okhttp.version']}"
            /*test*/
            dependency "junit:junit:${ext['junit.version']}"
            dependency "org.mockito:mockito-core:${ext['mockito.version']}"
            dependency "org.hamcrest:hamcrest-library:${ext['hamcrest-library.version']}"
            dependency "org.slf4j:slf4j-log4j12:${ext['slf4j-log4j.version']}"
        }
    }

    dependencies {
        api 'io.netty:netty-buffer'
        api 'com.google.code.findbugs:jsr305'
        api 'org.jetbrains.kotlin:kotlin-stdlib-jdk7'
        api 'io.reactivex.rxjava2:rxjava'
        api 'org.slf4j:slf4j-api'

        testImplementation 'junit:junit'
        testImplementation 'org.mockito:mockito-core'
        testImplementation 'org.hamcrest:hamcrest-library'
        testImplementation 'org.slf4j:slf4j-log4j12'
    }

    repositories {
        jcenter()
    }

    test {
        testLogging {
            events "failed"
            exceptionFormat "full"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar, javadocJar, jar
    }

    plugins.withType(MavenPublishPlugin) {
        publishing {
            publications {
                maven(MavenPublication) {
                    groupId 'io.rsocket.kotlin'

                    from components.java

                    artifact sourcesJar {
                        classifier "sources"
                    }

                    artifact javadocJar {
                        classifier "javadoc"
                    }

                    pom.withXml {
                        asNode().':version' + {
                            resolveStrategy = DELEGATE_FIRST

                            name project.name
                            description project.description
                            url 'http://rsocket.io'

                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                                }
                            }

                            developers {

                                developer {
                                    id 'mostroverkhov'
                                    name 'Maksym Ostroverkhov'
                                    email 'm.ostroverkhov@gmail.com'
                                }

                                developer {
                                    id 'robertroeser'
                                    name 'Robert Roeser'
                                    email 'robert@netifi.com'
                                }
                            }

                            scm {
                                connection 'scm:git:https://github.com/rsocket/rsocket-kotlin.git'
                                developerConnection 'scm:git:https://github.com/rsocket/rsocket-kotlin.git'
                                url 'https://github.com/rsocket/rsocket-kotlin'
                            }
                        }
                    }
                }
            }
        }
    }
}

if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayKey')) {

    subprojects {
        plugins.withId('com.jfrog.bintray') {
            bintray {
                user = project.property('bintrayUser')
                key = project.property('bintrayKey')

                publications = ['maven']
                publish = true

                pkg {
                    repo = 'RSocket'
                    name = 'rsocket-kotlin'
                    licenses = ['Apache-2.0']

                    issueTrackerUrl = 'https://github.com/rsocket/rsocket-kotlin/issues'
                    websiteUrl = 'https://github.com/rsocket/rsocket-kotlin'
                    vcsUrl = 'https://github.com/rsocket/rsocket-kotlin.git'
                    githubRepo = 'rsocket/rsocket-kotlin'
                    githubReleaseNotesFile = 'README.md'

                    version {
                        name = project.version
                        released = new Date()
                        vcsTag = project.version

                        gpg {
                            sign = true
                        }
                    }
                }
            }

            tasks.bintrayUpload.dependsOn tasks.jar, tasks.sourcesJar, tasks.javadocJar
        }

        plugins.withId('com.jfrog.artifactory') {
            artifactory {
                publish {
                    contextUrl = 'https://oss.jfrog.org'

                    repository {
                        repoKey = 'oss-snapshot-local'
                        username = project.property('bintrayUser')
                        password = project.property('bintrayKey')
                    }

                    defaults {
                        publications('maven')
                    }
                }
            }

            artifactoryPublish {
                dependsOn jar
            }
        }
    }
}

description = 'RSocket-kotlin: Reactive Streams over network boundary with Kotlin/Rxjava'

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}
